*runtimetable.nvim.txt*

==============================================================================
Lua module: runtimetable                      *runtimetable.nvim-runtimetable*

new({base_path})                                          *runtimetable.new()*
  Returns table to set runtime file content.

  Parameters: ~
    {base_path} (string) base runtime directory path

  Return: ~
    (RuntimetableRuntime) |RuntimetableRuntime|

save({runtime})                                          *runtimetable.save()*
  Save runtime files.

  Parameters: ~
    {runtime} (RuntimetableRuntime) |RuntimetableRuntime|

==============================================================================
STRUCTURE                                        *runtimetable.nvim-STRUCTURE*

RuntimetableRuntime                                      *RuntimetableRuntime*
  Table to set |'runtimepath'| file or direcotry contents.

- {[string]} (fun()|RuntimetableRuntime|string)

==============================================================================
EXAMPLES                                          *runtimetable.nvim-EXAMPLES*

>lua
  local path = vim.fn.stdpath("data") .. "/runtimetable"
  vim.opt.runtimepath:prepend(path)
  vim.opt.runtimepath:append(path .. "/after")

  local runtime = require("runtimetable").new(path)

  runtime.syntax["test.lua"] = function()
    if vim.b.current_syntax then
      return
    end

    vim.cmd.syntax({ args = { "match", "Comment", [["^\s*#.*"]] } })

    vim.b.current_syntax = "test"
  end

  runtime.after.ftplugin["test.lua"] = function()
    vim.bo.commentstring = "#%s"
  end

  runtime.doc["test.txt"] = [[
  *test.txt*

  ============================================================================
  ]]

  require("runtimetable").save(runtime)

  -- Created the following files:
  --  - {path}/syntax/test.lua
  --  - {path}/after/ftplugin/test.lua
  --  - {path}/doc/test.txt
<

==============================================================================
vim:tw=78:ts=8:ft=help
